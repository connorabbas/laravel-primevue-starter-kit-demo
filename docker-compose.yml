services:
  laravel:
    build:
      context: .
      dockerfile: Dockerfile
      target: release
    env_file: '.env'
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.laravel-primevue-demo.rule=Host(`demo.laravel-primevue-starter-kit.com`)'
      - 'traefik.http.routers.laravel-primevue-demo.entrypoints=websecure'
      - 'traefik.http.routers.laravel-primevue-demo.tls=true'
      - 'traefik.http.routers.laravel-primevue-demo.tls.certresolver=letsencrypt'
      - 'traefik.http.services.laravel-primevue-demo.loadbalancer.server.port=8080' # exposed http port from serversideup image
      # Health check
      - 'traefik.http.services.my-php-app.loadbalancer.healthcheck.path=/healthcheck'
      - 'traefik.http.services.my-php-app.loadbalancer.healthcheck.interval=30s'
      - 'traefik.http.services.my-php-app.loadbalancer.healthcheck.timeout=5s'
      - 'traefik.http.services.my-php-app.loadbalancer.healthcheck.scheme=http'
    networks:
      - proxy
    depends_on:
      - pgsql

  pgsql:
    image: postgres:17
    restart: always
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - proxy
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', '${DB_DATABASE}', '-U', '${DB_USERNAME}']
      retries: 3
      timeout: 5s

volumes:
  postgres-data:
    driver: local

networks:
  proxy:
    name: traefik_network
    external: true